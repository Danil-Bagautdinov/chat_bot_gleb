import bs4 as bs4
import pyowm
import pymorphy2
import requests
from bs4 import BeautifulSoup
from translate import Translator
morph = pymorphy2.MorphAnalyzer()


class VkBot:

    def __init__(self, user_id):
        print("\n–°–æ–∑–¥–∞–Ω –±–æ—Ç!")

        self._USER_ID = user_id
        self._USERNAME = self._get_user_name_from_vk_id(user_id)

        self._COMMANDS = ["–ü–†–ò–í–ï–¢", "–ü–û–ì–û–î–ê", "–í–†–ï–ú–Ø", "–ö–ê–ö –î–ï–õ–ê?", "–ü–û–ö–ê", "–¢–´ –î–£–†–ê–ö", "–ó–î–†–ê–°–¢–ï",
                          "–í–´–ü–¨–ï–ú", "–ü–†–ò–í–ï–¢ –ê–õ–ò–°–ê",
                          "–ê–†–¢–£–† –°–ê–î–´–ö–û–í", "–°–ê–î–´–ö–û–í –ê–†–¢–£–†", "–ë–ê–ì–ê–£–¢–î–ò–ù–û–í –î–ê–ù–ò–õ", "–î–ê–ù–ò–õ –ë–ê–ì–ê–£–¢–î–ò–ù–û–í",
                          '–ü–û–ì–û–î–´', '–ü–û–ú–û–©–¨', '–ü–ï–†–ï–í–ï–î–ò', '–°–ö–ê–ñ–ò –ö–£–†–°', '–ö–£–†–° –í–ê–õ–Æ–¢', '–ö–£–†–°',
                          "–ö–ê–ö–û–ô –ö–£–†–° –í–ê–õ–Æ–¢", "–°–ö–ê–ñ–ò –ö–£–†–° –í–ê–õ–Æ–¢", "–ö–û–†–û–ù–ê–í–ò–†–£–°", "COVID-19"]

    def _get_user_name_from_vk_id(self, user_id):
        request = requests.get("https://vk.com/id" + str(user_id))
        bs = bs4.BeautifulSoup(request.text, "html.parser")

        user_name = self._clean_all_tag_from_str(bs.findAll("title")[0])

        return user_name.split()[0]

    def new_message(self, message):

        # –ü—Ä–∏–≤–µ—Ç
        if message.upper() == self._COMMANDS[0]:
            return f"–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç, {self._USERNAME}!"

        # –ü–æ–º–æ—â—å
        elif message.upper() == '–ù–ê–ß–ê–¢–¨' or message.upper() == '–ü–û–ú–û–©–¨':
            return '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! üëã' '\n' '–ú–µ–Ω—è –∑–æ–≤—É—Ç –ì–ª–µ–±. –Ø —á–∞—Ç –±–æ—Ç. ü§ñ' '\n' \
                   '–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã: "–ü—Ä–∏–≤–µ—Ç",' \
                    ' "–ö–∞–∫ –¥–µ–ª–∞?", "–¢—ã –¥—É—Ä–∞–∫", "–í—ã–ø—å–µ–º", "–î–∞–Ω–∏–ª –ë–∞–≥–∞—É—Ç–¥–∏–Ω–æ–≤", "–ê—Ä—Ç—É—Ä –°–∞–¥—ã–∫–æ–≤",' \
                    ' "–ë–∞–≥–∞—É—Ç–¥–∏–Ω–æ–≤ –î–∞–Ω–∏–ª", "–°–∞–¥—ã–∫–æ–≤ –ê—Ä—Ç—É—Ä", "–ü–æ–≥–æ–¥–∞ –≤ (–≤–∞—à –≥–æ—Ä–æ–¥)",' \
                    ' "–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ (–≤–∞—à –≥–æ—Ä–æ–¥)", "–í—Ä–µ–º—è", "–ü—Ä–∏–≤–µ—Ç –ê–ª–∏—Å–∞", "–ü–æ–∫–∞", "–ó–¥—Ä–∞—Å—Ç–µ",' \
                   ' "–ü–æ–º–æ—â—å", "–ü–µ—Ä–µ–≤–µ–¥–∏ (—Ç–µ–∫—Å—Ç)", "COVID-19", "–ö–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å"'

        # –ü–æ–≥–æ–¥–∞
        elif self._COMMANDS[1] in message.upper() or self._COMMANDS[13] in message.upper():
            try:
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç —É–∑–Ω–∞—Ç—å –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ - –∏–¥—ë–º —Å—é–¥–∞..
                if '–ü–†–û–ì–ù–û–ó' in message.upper():
                    # –í—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –∏–∑ –∫–æ–º–º–∞–Ω–¥—ã –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
                    city_name = message.split()
                    # –°–∫–ª–æ–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂
                    return self._get_weather_3h(morph.parse(city_name[3])[0].inflect(
                        {'sing', 'nomn'}).word.title())
                # ...–∏–Ω–∞—á–µ —Å—é–¥–∞..
                else:
                    # –í—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –∏–∑ –∫–æ–º–º–∞–Ω–¥—ã –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
                    city_name = message.split()
                    # –°–∫–ª–æ–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂
                    return self._get_weather(morph.parse(city_name[2])[0].inflect(
                        {'sing', 'nomn'}).word.title())
            except:
                return '–û–π, —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –ø–æ–≤—Ç–æ—Ä–∏ –µ—â—ë —Ä–∞–∑–æ–∫.' '\n' \
                       '–í–Ω–∏–º–∞–Ω–∏–µ: –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å –≤–∏–¥,' \
                       '–∫ –ø—Ä–∏–º–µ—Ä—É: –ü–æ–≥–æ–¥–∞ –≤ –ê–∑–Ω–∞–∫–∞–µ–≤–æ –∏–ª–∏ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ –ê–∑–Ω–∞–∫–∞–µ–≤–æ' '\n' '' \
                       '–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã, –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –ø–æ —Ä–∞–∑–Ω–æ–º—É, –≥–ª–∞–≤–Ω–æ–µ, ' \
                       '—á—Ç–æ —ç—Ç–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –≥–æ—Ä–æ–¥ –≤ –†–æ—Å—Å–∏–∏.'

        # –í—Ä–µ–º—è
        elif message.upper() == self._COMMANDS[2]:
            return self._get_time()

        # –ö–∞–∫ –¥–µ–ª–∞?
        elif message.upper() == self._COMMANDS[3]:
            return f"–í—Å–µ –Ω–æ—Ä–º, {self._USERNAME}! ‚ò∫"

        # –ü–æ–∫–∞
        elif message.upper() == self._COMMANDS[4]:
            return f"–ü–æ–∫–∞, {self._USERNAME}! üòâ"

        # –û–±—â–µ–Ω–∏–µ
        elif message.upper() == self._COMMANDS[5]:
            return f"–ö—Ç–æ –æ–±–∑—ã–≤–∞–µ—Ç—Å—è, —Ç–æ—Ç —Å–∞–º —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è! üòõ"

        elif message.upper() == self._COMMANDS[6]:
            return f"–ó–¥–∞—Ä–æ–≤–∞, {self._USERNAME}! üñêüèª"

        elif message.upper() == self._COMMANDS[7]:
            return "–Ø –Ω–µ –ø—å—é!"

        elif message.upper() == self._COMMANDS[8]:
            return "–Ø –ì–õ–ï–ë! üòë"

        elif message.upper() == self._COMMANDS[9]:
            return f"–û—Ö, {self._USERNAME}, —è —Å –Ω–∏–º –æ—á–µ–Ω —Ö–æ—Ä–æ—à–æ –∑–Ω–∞–∫–æ–º. –û–Ω –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å!"

        elif message.upper() == self._COMMANDS[10]:
            return f"–û—Ö, {self._USERNAME}, —è —Å –Ω–∏–º –æ—á–µ–Ω —Ö–æ—Ä–æ—à–æ –∑–Ω–∞–∫–æ–º. –û–Ω –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å!"

        elif message.upper() == self._COMMANDS[11]:
            return f"–û–ª—è–ª—è, {self._USERNAME}, –≤—ã —Å –Ω–∏–º –∑–Ω–∞–∫–æ–º—ã? –û–Ω –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å! " \
                f"[id174238358|–°–æ–∑–¥–∞—Ç–µ–ª—å]"

        elif message.upper() == self._COMMANDS[12]:
            return f"–û–ª—è–ª—è, {self._USERNAME}, –≤—ã —Å –Ω–∏–º –∑–Ω–∞–∫–æ–º—ã? –û–Ω –º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å!"

        # –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫
        elif self._COMMANDS[15] in message.upper():
            return self._get_translation(message)

        # –ö—É—Ä—Å –≤–∞–ª—é—Ç
        elif message.upper() == self._COMMANDS[16]:
            return self._get_exchange_rates()

        elif message.upper() == self._COMMANDS[17]:
            return self._get_exchange_rates()

        elif message.upper() == self._COMMANDS[18]:
            return self._get_exchange_rates()

        elif message.upper() == self._COMMANDS[19]:
            return self._get_exchange_rates()

        elif message.upper() == self._COMMANDS[20]:
            return self._get_exchange_rates()

        elif message.upper() == self._COMMANDS[21]:
            return self._get_covid19_cases()

        elif message.upper() == self._COMMANDS[22]:
            return self._get_covid19_cases()

        else:
            return "–ù–µ –ø–æ–Ω–∏–º–∞—é –æ —á–µ–º –≤—ã. ü§®"

    # –í—Ä–µ–º—è
    def _get_time(self):
        request = requests.get("https://my-calend.ru/date-and-time-today")
        b = bs4.BeautifulSoup(request.text, "html.parser")
        return self._clean_all_tag_from_str(str(b.select(".page")[0].findAll("h2")[1])).split()[1]

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –æ—Ç –Ω–µ–Ω—É–∂–Ω—ã—Ö —Ç—ç–≥–æ–≤
    @staticmethod
    def _clean_all_tag_from_str(string_line):
        result = ""
        not_skip = True
        for i in list(string_line):
            if not_skip:
                if i == "<":
                    not_skip = False
                else:
                    result += i
            else:
                if i == ">":
                    not_skip = True
        return result

    # –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑
    @staticmethod
    def _get_weather_3h(city_name):
        try:
            owm = pyowm.OWM('cd663094c13260b015bc50ecf134be54')
            count = 0
            fc = owm.three_hours_forecast(f'{city_name},ru')
            f = fc.get_forecast()
            list = []
            for weather in f:
                g = weather.get_reference_time('iso'), weather.get_status()
                count += 1
                # –≤ "f" —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è 40 –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ 5 –¥–Ω–µ–π –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞
                # –ø–æ—ç—Ç–æ–º—É –±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ —á–∞—Å—Ç—å, –∞ –∏–º–µ–Ω–Ω–æ –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Ç—Ä–∏ –¥–Ω—è
                if count != 24:
                    list.append(g)
                else:
                    list.append('–§–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ —É–∫–∞–∑–∞–Ω –≤ UTC')
                    return '\n'.join(map(str, list))
        except:
            return '–ß—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å, –Ω–æ, –≥–ª–∞–≤–Ω–æ–µ, —á—Ç–æ –º—ã –Ω–µ —É–ø–∞–ª–∏...'

    # –ü–æ–≥–æ–¥–∞
    @staticmethod
    def _get_weather(city_name):
        try:
            # API - –∫–ª—é—á —Å–∞–π—Ç–∞ —Å –ø—Ä–æ–≥–Ω–æ–∑–∞–º–∏ –ø–æ–≥–æ–¥—ã
            owm = pyowm.OWM('cd663094c13260b015bc50ecf134be54')

            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–≥–æ–¥–µ
            observation = owm.weather_at_place(f'{city_name},RU')
            weather = observation.get_weather()

            # –ü–æ–ª—É—á–µ–Ω–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–≥–æ–¥–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: –û–±–ª–∞—á–Ω–æ
            weather_stat = weather.get_status()

            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–∞–≤–ª–µ–Ω–∏—è
            pressure = weather.get_pressure()['press']

            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–µ—Ç—Ä–∞
            wind_speed = weather.get_wind()['speed']

            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–µ—Ç—Ä–∞ –≤ –≥—Ä–∞–¥—É—Å–∞—Ö
            wind_direction = weather.get_wind()['deg']

            # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –≤–æ–∑–¥—É—Ö–∞
            humidity = weather.get_humidity()

            # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤–æ—Å—Ö–æ–¥–∞ –°–æ–ª–Ω—Ü–∞
            sunrise_time = weather.get_sunrise_time('iso')

            # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–∫–∞—Ç–∞ –°–æ–ª–Ω—Ü–∞
            sunset_time = weather.get_sunset_time('iso')

            # –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞ –∏–∑ –≥—Ä–∞–¥—É—Å–æ–≤ –≤ —Å—Ç–æ—Ä–æ–Ω—ã —Å–≤–µ—Ç–∞
            if wind_direction == 0 or wind_direction == 360:
                wind_direction_word = '–°'
            elif wind_direction in range(1, 90):
                wind_direction_word = '–°-–í'
            elif wind_direction == 90:
                wind_direction_word = '–í'
            elif wind_direction in range(91, 180):
                wind_direction_word = '–Æ-–í'
            elif wind_direction == 180:
                wind_direction_word = '–Æ'
            elif wind_direction in range(181, 270):
                wind_direction_word = '–Æ-–ó'
            elif wind_direction == 270:
                wind_direction_word = '–ó'
            elif wind_direction in range(271, 360):
                wind_direction_word = '–°-–ó'

            # –ü—Ä–µ–¥–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–≥–æ–¥—ã
            temperature = weather.get_temperature('celsius')['temp']
            temperature_max = weather.get_temperature('celsius')['temp_max']
            temperature_min = weather.get_temperature('celsius')['temp_min']
            if weather_stat == 'Clouds':
                weather_status = '–û–±–ª–∞—á–Ω–æ ‚òÅ'
            elif weather_stat == 'Rain':
                weather_status = '–î–æ–∂–¥—å üåß'
            elif weather_stat == 'Snow':
                weather_status = '–°–Ω–µ–≥ üå®'
            else:
                weather_status = '–°–æ–ª–Ω–µ—á–Ω–æ ‚òÄ'

            # –ò, –Ω–∞–∫–æ–Ω–µ—Ü, —Å–±–æ—Ä –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –≤–æ–µ–¥–∏–Ω–æ
            return ('–î–∞–π-–∫–∞ –ø–æ–¥—É–º–∞—Ç—å üîÆ' '\n' f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ üå°: –°–µ–π—á–∞—Å –≤ –≥–æ—Ä–æ–¥–µ {city_name} '
                    f'{temperature}‚ÑÉ.'
                    '\n' f'Max —Å—É—Ç. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature_max}‚ÑÉ' 
                    '\n' f'Min —Å—É—Ç. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature_min}‚ÑÉ'
                    '\n' f'–°—Ç–∞—Ç—É—Å: {weather_status}' '\n' f'–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç.' '\n'
                    f'–í–µ—Ç–µ—Ä üí®: {wind_direction_word}, {wind_speed} –º/—Å' 
                    '\n' f'–í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞ üí¶: {humidity}%'
                    '\n' f'–í–æ—Å—Ö–æ–¥ üåÖ: {sunrise_time}' '\n' f'–ó–∞–∫–∞—Ç üåá: {sunset_time}'
                    '\n' '*–≤—Ä–µ–º—è –ø–æ UTC')
        except:
            return '–û–π, —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –ø–æ–≤—Ç–æ—Ä–∏ –µ—â—ë —Ä–∞–∑–æ–∫ (–í–Ω–∏–º–∞–Ω–∏–µ: –≥–æ—Ä–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –†–æ—Å—Å–∏–∏!)'

    # –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞
    @staticmethod
    def _get_translation(message):
        translator = Translator(to_lang='Russian')
        text = message.split()
        new_text = ' '.join(map(str, text[1:]))
        return translator.translate(' '.join(map(str, text[1:])))

    # –§—É–Ω–∫—Ü–∏—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
    @staticmethod
    def _get_exchange_rates():
        url = 'https://www.cbr.ru/currency_base/daily/'

        source = requests.get(url)
        main_text = source.text
        soup = BeautifulSoup(main_text)

        table = soup.find('div', {'class': 'table-wrapper'})
        table = table.findAll('td', {'class': ''})
        return('–°–≤–µ–∂–∞–π—à–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç –∏–∑ —Å–∞–π—Ç–∞ –¶–ë –†–æ—Å—Å–∏–∏ üíπ' '\n' 
               f'{table[53].text} üá∫üá∏: {table[54].text[:-2]}‚ÇΩ –∑–∞ –æ–¥–∏–Ω $' '\n' f'{table[58].text} üá™üá∫: '
               f'{table[59].text[:-2]}‚ÇΩ –∑–∞ –æ–¥–∏–Ω ‚Ç¨')

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—Ä–∞–∂–µ–Ω–∏—è COVID-19 –≤ –†–æ—Å—Å–∏–∏
    @staticmethod
    def _get_covid19_cases():
        url = 'https://www.worldometers.info/coronavirus/country/russia/'

        source = requests.get(url)
        main_text = source.text
        soup = BeautifulSoup(main_text)

        tab = soup.findAll('div', {'class': 'maincounter-number'})
        return ('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞—Ä–∞–∂–µ–Ω–∏—è COVID-19 –≤ –†–æ—Å—Å–∏–∏' '\n' 
                f'–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ üò∑: {tab[0].text}'
                f'–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ üè•: {tab[2].text}' 
                f'–õ–µ—Ç–∞–ª—å–Ω—ã–µ –∏—Å—Ö–æ–¥—ã üíÄ: {tab[1].text}')
